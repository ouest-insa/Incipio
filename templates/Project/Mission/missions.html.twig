{% extends "Project/layout.html.twig" %}

{% set tab= "tab3" %}

{% block title %}
    Modifier les missions
{% endblock %}

{% block content_title %}
    Modifier l{{ form.missions | length |pluriel('es '~(form.missions | length)  ,'a') }}
    mission{{ form.missions | length | pluriel }}
{% endblock %}

{% block content_bundle %}


    {{ form_start(form, {'attr': {'name': 'missionsForm'}}) }}

    <p>
        <button type="button" class="btn btn-primary"
                id="add-another-mission">{{ 'suivi.mission_ajouter'|trans({}, 'project') }}</button>

        <button type="submit" class="btn btn-success">{{ 'suivi.missions_enregistrer'|trans({}, 'project') }}</button>
    </p>

    <div id="missions-fields-list" data-prototype="
            {% include 'Project/Mission/formulaire.prototype.html.twig'
    with {'form': form.missions.vars.prototype} |e %}">
        {% for mission in form.missions %}
            {% include 'Project/Mission/formulaire.html.twig' with {'form': mission} %}
        {% endfor %}
    </div>

    <p>
        <button type="submit" class="btn btn-success">{{ 'suivi.missions_enregistrer'|trans({}, 'project') }}</button>
    </p>
    {{ form_widget(form._token) }}
    <div class="hidden">
        {{ form_rest(form) }}
    </div>
    {{ form_end(form) }}

{% endblock %}

    {% block javascript %}
        {{ parent() }}
        {{ form_javascript(form) }}

        <script type="text/javascript">
            var missionsCount = {{ form.missions |length }};

            var isDirty = false;
            //Verification avant de quitter
            $(':input').change(function () {
                if (!isDirty) {
                    isDirty = true;
                }
            });
            $(window).bind('beforeunload', function () {
                if (isDirty)
                    return "Voulez-vous quitter sans enregistrer ?";
            });
            $('form').submit(function () {
                isDirty = false;
                return true;
            });

            var addPhaseButton = function (tag) {
                var removePhase = $('<button class="btn btn-xs"><i class="fa fa-times"></i></button>');
                tag.children().first().append(removePhase);
                removePhase.on('click', function (e) {
                    e.preventDefault();
                    var message = "Êtes vous sûr de vouloir supprimer ces JEH ?";
                    bootbox.confirm(message, function (result) {
                        if (result) {
                            tag.remove();
                        }
                    });
                });
            };

            var addMissionButton = function (tag) {
                var removeMission = $('<button class="btn btn-danger btn-xs"><i class="fa fa-times"></i></button>');
                tag.append(removeMission);
                removeMission.on('click', function (e) {
                    e.preventDefault();
                    var message = "Êtes vous sûr de vouloir supprimer cet intervenant ?";
                    bootbox.confirm(message, function (result) {
                        if (result) {
                            tag.parent().parent().parent().remove();
                        }
                    });
                });
            };

            //add button delete on repartition
            $('.repartitions').each(function () {
                addPhaseButton($(this));
            });

            //add button delete on missions
            var missions = $('[data-role=mission]');
            missions.find('.worker').each(function () {
                addMissionButton($(this));
            });
            $('.select2-multiple').select2();

            jQuery(document).ready(function () {
                jQuery('#add-another-mission').click(function (e) {
                    e.preventDefault();
                    var missionList = jQuery('#missions-fields-list');
                    var newWidget = missionList.attr('data-prototype');

                    // replace the "__name__" used in the id and name of the prototype
                    newWidget = newWidget.replace(/__name__/g, missionsCount);
                    missionsCount++;

                    // create a new list element and add it to the list
                    var newItem = jQuery('<div></div>').html(newWidget);
                    newItem.appendTo(missionList);

                    //apply functions to make the new one similar to the other
                    $('.select2-multiple').select2();
                    $('.js-datepicker').datepicker({format: 'dd/mm/yyyy', language: 'fr'});
                    addMissionButton(newItem.find('.worker'));
                });
            });

            jQuery(document).ready(function () {
                jQuery('.add-another-repartition').click(function (e) {
                    e.preventDefault();

                    var repartitionTable = $(this).parent().parent().parent().parent();
                    var repartitionList = repartitionTable.find('.repartition-list');
                    var newWidget = repartitionList.attr('data-prototype');
                    var repartitionCount = repartitionList.attr('data-count');

                    // replace the "__name__" used in the id and name of the prototype
                    newWidget = newWidget.replace(/__name__/g, repartitionCount);

                    repartitionCount++;
                    repartitionList.attr('data-count', repartitionCount);

                    // create a new list element and add it to the list
                    var newItem = jQuery('<tr></tr>').html(newWidget);
                    newItem.appendTo(repartitionList);

                    addPhaseButton(newItem.find('.repartitions'));

                });
            });
        </script>
    {% endblock %}
